---
- name: "Install sur mon ec2"
  hosts: last
  vars:
    #remote_user: admin
    #become: yes
    #become_method: sudo
    gitlab_image: "gitlab/gitlab-ce"
    gitlab_ssh_port: "2222"
    gitlab_https_port: "443"
    gitlab_http_port: "80"
    
    gitlab_config_dir: "/srv/gitlab/config"
    gitlab_logs_dir: "/srv/gitlab/logs"
    gitlab_data_dir: "/srv/gitlab/data"
    

  
  
  tasks:
 
   - name: "update package"
     apt:
        update_cache: yes
 
   - name: Install packages for apt add repository over HTTPS
     apt:
          name: "{{ packagesdep }}"
          force_apt_get: yes
          state: latest
          update_cache: yes
     vars:
          packagesdep:
          - git
          - wget
          - vim
          - zsh
          - curl
          - gnupg2
          - software-properties-common
          - ca-certificates
          - apt-transport-https
          
          
   - name: Add Docker GPG apt Key
     shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
     
   - name: fingerprint 
     shell: apt-key fingerprint 0EBFCD88
     
   - name: dd docker official repository
     shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
 
   - name: "update package"
     apt:
        update_cache: yes
        
   
   - name: "Installation de docker "
     apt: 
        name: docker-ce 
        state: latest
        
   - name: "Installation de docker-ce-cli "
     apt: 
        name: docker-ce-cli  
        state: latest
        
   - name: "Installation de containerd.io "
     apt: 
        name: containerd.io  
        state: latest   
        
   - name: "Installation de pip "
     apt: 
        name: python-pip  
        state: latest   
        
   - name: "Installation de pip "
     apt: 
       name: python-setuptools  
       state: latest   
        
        
   - name: "Installation de pip "
     apt: 
        name: python-docker 
        state: latest     
   
   
   - name: "pip instal virtualenv"
     pip:
      name: "virtualenv"
      
      
      
   - name: "pip instal docker"
     pip:
      name: "docker"
      virtualenv: "/usr/local/bin/docker/virtualenv"
      
     
             
   - name: pull an image
     docker_image:
        name: gitlab/gitlab-ce
        source: pull  
        
   - name: Create gitlab directories
     file: path={{ item }} recurse=yes state=directory
     with_items:
     - "{{ gitlab_config_dir }}"
     - "{{ gitlab_logs_dir }}"
     - "{{ gitlab_data_dir }}"
     
 
   - name: Install Gitlab container
     docker_container:
      name: mygit
      image: "{{ gitlab_image }}"
      state: started
      ports:
        - "{{ gitlab_http_port }}:80"
        - "{{ gitlab_https_port }}:443"
      volumes:
        - "{{ gitlab_config_dir }}:/etc/gitlab"
        - "{{ gitlab_logs_dir }}:/var/log/gitlab"
        - "{{ gitlab_data_dir }}:/var/opt/gitlab"
      restart_policy: always
      #notify: restart docker
      
      
      
  handlers:
    - name: restart docker
      service:
         name: docker
         state: restarted    

   
 

     
 
